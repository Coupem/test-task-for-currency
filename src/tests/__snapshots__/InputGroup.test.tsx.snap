// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Footer should render correctly 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <InputValuesGroup
    baseCurrency="string"
    currency={
      Object {
        "currency": Array [
          Object {
            "baseCcy": "UAH",
            "buy": "27.05000",
            "ccy": "USD",
            "sale": "27.45000",
          },
          Object {
            "baseCcy": "UAH",
            "buy": "31.85000",
            "ccy": "EUR",
            "sale": "32.45000",
          },
          Object {
            "baseCcy": "UAH",
            "buy": "1",
            "ccy": "UAH",
            "sale": "1",
          },
          Object {
            "baseCcy": "UAH",
            "buy": "0.35000",
            "ccy": "RUR",
            "sale": "0.38000",
          },
          Object {
            "baseCcy": "USD",
            "buy": "31125.3298",
            "ccy": "BTC",
            "sale": "34401.6803",
          },
        ],
        "error": "string",
        "isLoadingCurrency": false,
      }
    }
    handleChangeCurrency={[Function]}
    handleChangeInput={[Function]}
  >
    <Styled(Component)
      className="m-auto"
    >
      <ForwardRef(InputGroup)
        className="sc-fnVZcZ ceSpry m-auto"
      >
        <div
          className="sc-fnVZcZ ceSpry m-auto input-group"
        >
          <Formik
            initialValues={
              Object {
                "amount": "",
                "currency": "string",
              }
            }
            onSubmit={[Function]}
            validate={[Function]}
          >
            <form>
              <styled.input
                data-testid="input"
                name="amount"
                onChange={[Function]}
                placeholder="input value"
                type="number"
                value=""
              >
                <input
                  className="sc-hBMUJo gCIqZs"
                  data-testid="input"
                  name="amount"
                  onChange={[Function]}
                  placeholder="input value"
                  type="number"
                  value=""
                />
              </styled.input>
              <styled.select
                defaultValue="string"
                name="currency"
                onChange={[Function]}
              >
                <select
                  className="sc-bkbkJK bTnLfD"
                  defaultValue="string"
                  name="currency"
                  onChange={[Function]}
                >
                  <styled.option
                    key="USD"
                    value="USD"
                  >
                    <option
                      className="sc-fFSPTT kWHaHm"
                      value="USD"
                    >
                      USD
                    </option>
                  </styled.option>
                  <styled.option
                    key="EUR"
                    value="EUR"
                  >
                    <option
                      className="sc-fFSPTT kWHaHm"
                      value="EUR"
                    >
                      EUR
                    </option>
                  </styled.option>
                  <styled.option
                    key="UAH"
                    value="UAH"
                  >
                    <option
                      className="sc-fFSPTT kWHaHm"
                      value="UAH"
                    >
                      UAH
                    </option>
                  </styled.option>
                  <styled.option
                    key="RUR"
                    value="RUR"
                  >
                    <option
                      className="sc-fFSPTT kWHaHm"
                      value="RUR"
                    >
                      RUR
                    </option>
                  </styled.option>
                  <styled.option
                    key="BTC"
                    value="BTC"
                  >
                    <option
                      className="sc-fFSPTT kWHaHm"
                      value="BTC"
                    >
                      BTC
                    </option>
                  </styled.option>
                </select>
              </styled.select>
            </form>
          </Formik>
        </div>
      </ForwardRef(InputGroup)>
    </Styled(Component)>
  </InputValuesGroup>
</Provider>
`;
